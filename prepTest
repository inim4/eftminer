from IPython.parallel import Client
import pandas as pd
import numpy as np
import math
import time
import datetime
from datetime import datetime
from timeit import default_timer as clock
from sklearn.linear_model import LinearRegression
from prep2 import *

fileName = '/home/tita/docs/exp2/data%(i)02d.txt'
names = [fileName % {'i':i} for i in range(1,8)]
strDate = '2013-09-%(j)02d' 
dates = [strDate %{'j':j} for j in range(5,12)]

datList = []
for k in range(len(names)):
	dat = readData(names[k])
	slc = selectData(dat,dates[k])
	trans = selectTrans(slc)
	arrTrans = frameTrans(trans)
	datTrans = arrTrans[0]
	dfTrans = arrTrans[1]

	dfReturn = computeReturn(datTrans)
	dfFiid = computeFiid(datTrans)
	dfRev = computeRevenue(datTrans)
	
	#daily slope
	datSlope = datTrans[['strretailerid','sic','dt', 'famt']]
	datSorted = datSlope.sort_index(by='dt', ascending = True)
	datGrp = datSorted.groupby(['strretailerid','sic'])
	
	arrName=[]
	tmpArr=[]
	theta=[]

	for name, group in datGrp:
		arrName.append(name)

	# Connect to the IPython cluster
	c = Client(profile='titaClusters')
	c[:].run('prep2.py')
	c[:].block = True
	nIntv = len(arrName)/10
	cGroup = []

	for l in range(0,len(c)):
		m = l * nIntv
		n = (l+1) * nIntv
		if l == 9:
			lastInd = len(arrName)
		else:
			lastInd = n
		indGrp = []
		for o in range(m,lastInd):
			tmpArr = datGrp.get_group(arrName[o])
			if len(tmpArr) > 1:
				indGrp.append(arrName[o])
		cGroup.append(indGrp)

	#parallel compute daily slope of retailer for one-day dataset
	dfTheta1 = c[0].apply_sync(computeDailySlope,cGroup[0],datGrp)
	dfTheta2 = c[1].apply_sync(computeDailySlope,cGroup[1],datGrp)
	dfTheta3 = c[2].apply_sync(computeDailySlope,cGroup[2],datGrp)
	dfTheta4 = c[3].apply_sync(computeDailySlope,cGroup[3],datGrp)
	dfTheta5 = c[4].apply_sync(computeDailySlope,cGroup[4],datGrp)
	dfTheta6 = c[5].apply_sync(computeDailySlope,cGroup[5],datGrp)
	dfTheta7 = c[6].apply_sync(computeDailySlope,cGroup[6],datGrp)
	dfTheta8 = c[7].apply_sync(computeDailySlope,cGroup[7],datGrp)
	dfTheta9 = c[8].apply_sync(computeDailySlope,cGroup[8],datGrp)
	dfTheta10 = c[9].apply_sync(computeDailySlope,cGroup[9],datGrp)

	arrSlope = [dfTheta1,dfTheta2,dfTheta3,dfTheta4,dfTheta5,dfTheta6,dfTheta7,dfTheta8,dfTheta9,dfTheta10]
	dfSlope = pd.concat(arrSlope, ignore_index=True)

	pieces = [dfTrans,dfFiid,dfReturn,dfRev,dfSlope] 
	dataprep = aggAll(pieces)
			

	datList.append(dataprep)


